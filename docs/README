The Public Mapping Project
http://sourceforge.net/projects/publicmapping/

This software requires a few other pieces of free software to run.  Before you can run the public mapping
web site, you'll need to install and configure:

Geoserver v 2.0.2
Postgresql v 8.4 w/ PostGIS
Python v 2.6
Django v 1.1

Once these pieces are installed, check out the public mapping projects to the /projects directory of your 
linux installation.
mkdir /projects
cd /projects
svn co https://publicmapping.svn.sourceforge.net/svnroot/publicmapping publicmapping

Create a "local" directory next to the trunk - this is where your machine-specific settings and data will go
mkdir /projects/publicmapping/local

Copy the settings_sample.ini file to your local settings folder and name it settings.ini
cp /projects/publicmapping/trunk/docs/settings_sample.ini /projects/publicmapping/local/settings.ini

Run the publicmapping_db.sql script in the sql directory.
sudo -s postgres psql -f /projects/publicmapping/trunk/sql/publicmapping_db.sql

This will create a publicmapping db from the template_postgis template, along with a publicmapping
user role.  The publicmapping user will be assigned all permissions and ownership on the db.

Check out your settings.ini folder and make sure it's pointing to the correct DB and that your DB
is accessible. You may want to adjust the value of the map server, too.
Run the python command in the settings file to generate a secret key for your application and copy
it into the settings.ini file.

Run the django syncdb command to create the database
python /projects/publicmapping/trunk/django/publicmapping/manage.py syncdb

To import your data, you'll need to configure the importshape.py script in the "python" directory.
Using your favorite text editor, update the shapefile paths and subject configuration to match your data.

Run the importshapes script from withing the django shell
cd /projects/publicmapping/trunk/python
python ../django/publicmapping/manage.py shell
execfile('importshapes.py')

The script may take a long time to run.  It will import the geographic data from the shapes and 
create the links and django models necessary to run the application.  Once it's run, you can exit
the shell by typing:
quit()

Now that you have the app configured and your data imported, you can run the app using Django's testing server
python /projects/publicmapping/trunk/django/publicmapping/manage.py runserver

You will see a notice that your server is running and you can access your application
at 127.0.0.1:8000  Enter that location into your browser on the local machine and you should be
able to use the application.
