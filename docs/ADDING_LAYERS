The Public Mapping Project
http://sourceforge.net/projects/publicmapping/

== Adding Layers ==

This document describes the process of adding a new layer to The Public
Mapping Project. In this document, layer and geographic level are used to 
refer to spatial data; if the data is not yet in the application, it is 
referred to as a layer, if the data is imported into the application, it is
referred to as a geographic level.

First, a few things are assumed about the layers in the application:

 1. The boundaries in your new layer lie along the boundaries of the 
    geographic units at the geographic level designated by the 
    BASE_GEOLEVEL application setting. 
    
    In the default setup, this geographic level is at the Census Block
    level.  Therefore, any layers added to the default setup would need
    to align with the Census Blocks.
    
 2. The new layer fits into the existing geolevels at a discrete point in
    the spatial heirarchy.  Geographic units at a higher geographic level
    must be composed of a subset of the geographic units at a lower 
    geographic level.
    
    In the default setup, the geographic levels are: county, tract, and
    block.  All tracts are composed of a number of blocks, and all counties
    are composed of a number of tracts.  Therefore, any new layers added to
    the default setup would need to fit into this hierarchy -- census block
    groups or states would be a good example.
    
 3. The new layer must have the same spatial attributes for subjects as
    the other layers in the application.  All layers in the application
    must have the same attributes available for importing into related
    subject fields.
    
    In the default setup, each geographic level has Total Population, 
    Black Population, and Hispanic Population.  Any new layer added to the
    application would also need to have those same attributes.
    
If all of the above are true, proceed with the instructions below to 
import the layer into The Public Mapping Project.

== Importing Data ==

 1. Configure the 'import' admin command by editing:
 
    trunk/django/publicmapping/redistricting/management/commands/import.py
    
    Add to the 'configs' setting the parameters for your new layer.
    
     a. shapepath: the filesystem path to the layer's shapefile.
     b. geolevel: the name of this layer: 'county', 'tract', 'block' are
            examples of existing names.
     c. name_field: the attribute of each feature that contains the name
            of the geographic unit. This can be a county name or a census
            block ID, for example.
     d. subject_fields: a set of key/value pairs that map attributes from
            the shape file to subjects in the application. The key is the
            attribute name, and the value is the subject name. The values
            must match the full name of the subjects that are already in 
            the application, or problems will occur with layers and views.
    
 2. The layer may be imported into the application with the use of the
    'import' admin command. Let's pretend you configure a layer at the
    geolevel 'blockgroup':
    
    > python ./manage.py import blockgroup
    
    Depending on the number of geographic units in this layer, it may take
    some time to import the whole layer.
    
 3. Create the views necessary for the map layers and demographic subject
    combinations. This is the 'demographics' admin command:
    
    > python ./manage.py demographics
    
    The output may appear to be re-creating views that are already in
    the system, but that is expected.
    
 4. Set up the geographic levels in geoserver:
 
     a. Create the SLD stylesheets for your new layer:
     
         i. Go to the geoserver admin site:
         
            http://yourComputerName:8080/geoserver/web
            
        ii. On the left menu, click on Styles, under Data.
       iii. Click on the "Add a new style" link at the top of the page.
        iv. Under "Copy from existing style", choose a style for a similar
            demographic, at a different geographic level.
         v. Click on "Copy ..."
        vi. Change the values in the <ogc:Literal> tags to match the data
            range in the geographic level.
       vii. Name the style <geolevel>_<subject>, where subject is the key
            used during the import process.
      viii. Validate the SLD.
        ix. Submit the SLD.
         x. Repeat for each subject.
        
     b. Add the layer to the catalog:
     
         i. In the geoserver admin site, click on Layers, under Data.
        ii. Click on the "Add a new resource" link at the top of the page.
       iii. Select the PostGIS datastore.
        iv. There will be a few layers to add:
             1. One layer named "simple_<geolevel>"
             2. One layer per subject, named "demo_<geolevel>_<subject>"
         v. For each of these layers, click on 'Publish'
        vi. Click on "Compute from data" in the "Bounding Boxes" section.
       vii. Click on the "Compute from native bounds" in the "Bounding
            Boxes" section.
      viii. Click on the 'Publishing' tab.
        ix. Select the corresponding style you created in step 'a' above,
            in the dropdown "Default Style" under "WMS Settings"
         X. Click on Save.
         
     c. Create a cache for the WMS layer:
     
         i. In the geoserver admin site, click on GWC, under Services.
        ii. Click on "A list of all the layers and automatic demos"
       iii. Under the layers added in step 'b' above, click on "Seed this 
            layer"
        iv. Select the correct coordinate system in the "Grid Set" 
            dropdown, and set the Zoom stop dropdown to something like 6;
            12 zoom levels will take a long time, and the application 
            will probably never display those tiles.