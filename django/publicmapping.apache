#
#   Copyright 2010 Micah Altman, Michael McDonald
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#
#   This file is part of The Public Mapping Project
#   http://sourceforge.net/projects/publicmapping/
#
#   Purpose:
#       publicmapping.apache is an Apache HTTP configuration file.
#
#       This file configures the web server to serve up The Public Mapping
#       Project out of /, and configures a django WSGI application. In 
#       addition, the static media for the django web application is
#       served up through a set of aliased paths.
#  
#   Author: 
#       Andrew Jennings, David Zwarg
#


<IfDefine !nobuilder>
    # The main publicmapping host securely serves the web application. If you 
    # haven't enabled SSL on your web server, the app will not run
    <IfModule mod_ssl.c>
    <VirtualHost *:443>
        # require SSL
        SSLEngine on
        SSLCertificateFile /etc/ssl/certs/publicmapping.crt
        SSLCertificateKeyFile /etc/ssl/certs/publicmapping.key
        CustomLog ssl_request_log "%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \"%r\" %b"

        # Directives from ubuntu's default-ssl site to make IE connections work
        BrowserMatch "MSIE [2-6]" nokeepalive ssl-unclean-shutdown downgrade-1.0 force-response-1.0
        BrowserMatch "MSIE [17-9]" ssl-unclean-shutdown

        ServerAdmin AzaveaDev@azavea.com
        WSGIDaemonProcess geodjango user=www-data group=www-data processes=5 threads=1 display-name=publicmapping
        WSGIProcessGroup geodjango
        WSGIScriptAlias / /projects/publicmapping/trunk/django/publicmapping.wsgi

        Alias /static-media/ /projects/publicmapping/trunk/django/publicmapping/static-media/
        <Directory /projects/publicmapping/trunk/django/publicmapping/static-media>
            Order deny,allow
            Allow from all
        </Directory>

        Alias /reports/ /projects/publicmapping/local/reports/
        <Directory /projects/publicmapping/local/reports/>
        Options Indexes FollowSymLinks
            Order deny,allow
            Allow from all
        </Directory>

        Alias /sld/ /projects/publicmapping/trunk/sld/
        <Directory /projects/publicmapping/trunk/sld/>
            Options Indexes
            Order deny,allow
            Allow from all
        </Directory>

        Alias /docs/ /projects/publicmapping/trunk/docs/html/
        <Directory /projects/publicmapping/trunk/docs/html/>
            Options Indexes
            Order deny,allow
            Allow from all
        </Directory>

        ErrorLog /var/log/apache2/publicmapping-error.log

        # Possible values include: debug, info, notice, warn, error, crit,
        # alert, emerg.
        LogLevel warn

        CustomLog /var/log/apache2/publicmapping-access.log combined

        RewriteEngine On

        # This redirects report requests to an alternate port.
        RewriteRule ^/reporting/getreport/$ http://localhost:8081/getreport/ [NC,P]

        # You can comment out this rewriterule and adjust your map server name accordingly to stop proxying
        # map requests through apache
        RewriteRule /geoserver/(.*) http://%{HTTP_HOST}:8080/geoserver/$1 [NC,P]

        RewriteLog /var/log/apache2/publicmapping-rewrite.log
        RewriteLogLevel 0

    </VirtualHost>
    </IfModule>

    # All traffic on port 80 should be redirected to a secure port
    <VirtualHost *:80>
        RewriteEngine On
        RewriteCond %{SERVER_PORT} 80
        RewriteRule ^(.*) https://%{HTTP_HOST}$1 [R,L]
    </VirtualHost>
</IfDefine>

<IfDefine !noreporting>
    <IfDefine nobuilder>
        # All traffic on port 80 should be redirected to the reporting port
        <VirtualHost *:80>
            RewriteEngine On
            RewriteCond %{SERVER_PORT} 80
            RewriteRule ^(.*) http://%{HTTP_HOST}:8081$1 [R,L]
        </VirtualHost>
    </IfDefine>
    # Necessary to keep rPy2 from throwing exceptions
    WSGIRestrictStdout Off

    # This virtual host is responsible for running a multithreaded environment for reports
    NameVirtualHost *:8081
    Listen 8081

    # If you're using mod_wsgi version 3 or later, this will throw a configtest error when starting apache.
    # In that case only, delete or comment out this line and use the one within the virtual host
    # More info here: http://code.google.com/p/modwsgi/wiki/ChangesInVersion0300
    #WSGIImportScript /projects/publicmapping/trunk/django/reports.wsgi process-group=bard-reports application-group=bard-reports

    <VirtualHost *:8081>
        ServerAdmin AzaveaDev@azavea.com
        WSGIDaemonProcess bard-reports user=www-data group=www-data processes=1 threads=1 display-name=publicmapping-reports
        WSGIScriptAlias / /projects/publicmapping/trunk/django/reports.wsgi
        WSGIProcessGroup bard-reports
        WSGIApplicationGroup bard-reports
        # mod_wsgi v3 only!  see above.
        WSGIImportScript /projects/publicmapping/trunk/django/reports.wsgi process-group=bard-reports application-group=bard-reports
        ErrorLog /var/log/apache2/bard-reporting-error.log
        CustomLog /var/log/apache2/bard-reporting-access.log combined
        
        LogLevel debug

        # This virtual host needs a longer timeout because of reports
        Timeout 600

        # These requests are proxied through the secure server.  Non-local access forbidden.
        <IfDefine !nobuilder>
            <Directory />
                Order deny,allow
                Deny from all
                Allow from 127.0.0.1/16
            </Directory>
        </IfDefine>
        
    </VirtualHost>
</IfDefine>
