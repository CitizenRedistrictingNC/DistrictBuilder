ADMINS = (
    (
        '{{ admin.get('user') }}',
        '{{ admin.get('email') }}',
    )
)
MANAGERS = ADMINS

TIME_ZONE = '{{ i18n.get('timezone') }}'

LANGUAGES = (
    {% for language in i18n.xpath('Language') %}
    (
        '{{ language.get('code') }}',
        '{{ language.get('label') }}',
    ),
    {% endfor %}
)
LANGUAGE_CODE = '{{ i18n.get('default') or i18n[0].get('code') }}'

DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': '{{ database.get('name') }}',
        'USER': '{{ database.get('user') }}',
        'PASSWORD': '{{ database.get('password') }}',
        'HOST': '{{ database.get('host') }}',
        'PORT': '5432'
    }
}

MAP_SERVER = '{{ map_server.get('hostname') }}'

{% if map_server.get('protocol') %}
MAP_SERVER_PROTOCOL = '{{ map_server.get('protocol') }}'
{% endif %}

BASE_MAPS = '{{ map_server.get('basemaps') }}'
MAP_SERVER_NS = '{{ map_server.get('ns') }}'
MAP_SERVER_NSHREF = '{{ map_server.get('nshref') }}'
FEATURE_LIMIT = '{{ map_server.get('maxfeatures') }}'
MAP_SERVER_USER = '{{ map_server.get('adminuser') }}'
MAP_SERVER_PASS = '{{ map_server.get('adminpass') }}'

KEY_VALUE_STORE = {
    'PASSWORD': '{{ key_value_store[0].get('password') }}',
    'HOST': '{{ key_value_store[0].get('host') }}',
    'PORT': '{{ key_value_store[0].get('port') }}',
    'DB': '{{ key_value_store[0].get('db') }}',
}

ADJACENCY = {{ 'True' if adjacencies|length > 0 else 'False' }}

# Specific Settings for Convex Hull Choropleth - This choropleth
# can only be displayed if convex hull is added to a list of score
# functions
CONVEX_CHOROPLETH = {{ 'True' if convex|length > 0 else 'False' }}

EMAIL_HOST = '{{ mailer.get('server') }}'
EMAIL_PORT = '{{ mailer.get('port') }}'
EMAIL_HOST_USER = '{{ mailer.get('username') }}'
EMAIL_HOST_PASSWORD = '{{ mailer.get('password') }}'
EMAIL_SUBJECT_PREFIX = '{{ mailer.get('prefix') }}'
EMAIL_USE_TLS = {{ 'True' if mailer.get('use_tls') == 'true' else 'False' }}
EMAIL_SUBMISSION = '{{ mailer.get('submission_email') }}'

CONCURRENT_SESSIONS = '{{ project.get('sessionquota') or 5 }}'
SESSION_TIMEOUT = '{{ project.get('sessiontimeout') or 15 }}'
BANNER_IMAGE = '{{ project.get('bannerimage') or '/static/images/banner-home.png' }}'

# Reporting is optional
{% if reporting and reporting[0].find('CalculatorReports') %}
REPORTS_ENABLED = 'CALC'
{% else %}
REPORTS_ENABLED = None
{% endif %}

{% if google_analytics and google_analytics|length > 0 %}
GA_ACCOUNT = '{{ google_analytics[0].get('account') }}'
GA_DOMAIN = '{{ google_analytics[0].get('domain') }}'
{% else %}
GA_ACCOUNT = None
GA_DOMAIN = None
{% endif %}

MAX_UPLOAD_SIZE = {{ upload[0].get('maxsize') if upload|length > 0 else 5000 }} * 1024
FIX_UNASSIGNED_MIN_PERCENT = {{ fix_unassigned[0].get('minpercent') if fix_unassigned|length > 0 else 99 }}
FIX_UNASSIGNED_COMPARATOR_SUBJECT = '{{ fix_unassigned[0].get('comparatorsubject') if fix_unassigned|length > 0 else 'poptot' }}'

# Undo restrictions
MAX_UNDOS_DURING_EDIT = {{ max_undos[0].get('duringedit') if max_undos|length > 0 else 0 }}
MAX_UNDOS_AFTER_EDIT = {{ max_undos[0].get('afteredit') if max_undos|length > 0 else 0 }}

# Leaderboard
LEADERBOARD_MAX_RANKED = {{ leaderboard[0].get('maxranked') if leaderboard|length > 0 else 10 }}
