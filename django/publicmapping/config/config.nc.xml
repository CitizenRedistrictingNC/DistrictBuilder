<!-- The application element that contains all other elements. -->
<DistrictBuilder>

   <!-- Define legislative bodies referenced in the system. -->
   <LegislativeBodies>
      <LegislativeBody id="congress" name="Congressional" short_label="%(district_id)s"
         long_label="District %(district_id)s" maxdistricts="13" sort_key="1" members="Districts"/>
   </LegislativeBodies>

   <!-- Define Regions as aggregations of smaller geographic units. -->
   <Regions>
         <Region id="nc" name="nc" label="North Carolina" description="The Commonwealth of North Carolina" sort_key="0">
            <!-- A set of legislative bodies that exist in this region. -->
            <LegislativeBodies>
               <LegislativeBody ref="congress" />
            </LegislativeBodies>
            <!-- Only these geolevels are applicable to this region -->
            <GeoLevels>
               <!-- <GeoLevel ref="block"> -->
                  <GeoLevel ref="vtd">
                        <GeoLevel ref="county" />
                  </GeoLevel>
               <!-- </GeoLevel> -->
            </GeoLevels>
         </Region>
   </Regions>

    <!-- A list of subjects referenced in the system. -->
    <Subjects>
        <!-- A Subject is a measurement type, such as "Total Population".
            The subject is mapped to an attribute during the import phase,
            and contains a long and short display name. Subjects have IDs
            for referencing in GeoLevel definitions later. -->
        <!-- You can alias a subject by overriding the field, if the
            import shapefiles have different field names at different
            geographic levels. -->
        <!-- <Subject id="pophisp1" field="POPHISP" aliasfor="pophisp"/> -->
        <Subject id="poptot" field="PL10AA_TOT" name="Total Population"
                 short_name="Total Pop." displayed="true" sortkey="17" default="true" />
    </Subjects>

    <Scoring>
        <ScoreFunctions>
            <ScoreFunction id="b_plan_congress_noncontiguous" type="plan"
                calculator="redistricting.calculators.Contiguity"
                label="Contiguous">
                <Argument name="target" value="13" />
            </ScoreFunction>

            <ScoreFunction id="a_congress_plan_equipopulation_validation" type="plan"
                calculator="redistricting.calculators.Equipopulation"
                label="Target Pop. (727,366)"
                description="The population of each Congressional district must be 727,366 +/- 0.5%.">
                <Argument name="min" value="723729"/>
                <Argument name="max" value="731003"/>
                <SubjectArgument name="value" ref="poptot"/>
                <Argument name="validation" value="1"/>
            </ScoreFunction>
        </ScoreFunctions>

        <ScorePanels>
            <!-- Summary above all sidebar panels -->
            <ScorePanel id="congressional_panel_summary" type="plan_summary" position="1"
                title="Plan Summary" cssclass="plan_summary congressional" template="plan_summary.html">
                <Score ref="b_plan_congress_noncontiguous"/>
            </ScorePanel>
        </ScorePanels>

        <ScoreDisplays>
            <ScoreDisplay id="congress_sidebar_basic" legislativebodyref="congress" type="sidebar" title="Basic Information" cssclass="basic_information">
                <ScorePanel ref="congressional_panel_summary" />
            </ScoreDisplay>
        </ScoreDisplays>
    </Scoring>

    <Validation>
        <Criteria legislativebodyref="congress">
            <Criterion id="congress-equipop" name="Equipopulation - Congress"
                description="&lt;p&gt;Your plan does not meet the competition criteria for Equipopulation:&lt;/p&gt;&lt;p&gt;The population of each Congressional district must be 727,366 +/- 0.5%.&lt;/p&gt;">
                <Score ref="a_congress_plan_equipopulation_validation" />
            </Criterion>
        </Criteria>
    </Validation>

    <!--
    <Adjacencies>

      In order to load 'Adjacency' into the database for use of the adjacency
      data must be in a tab-delimited text file where:

      column 1 = geounit1_id
      column 2 = geounit2_id
      column 3 = cost/distance/travel time, etc.

      The geounit_id's *must* be the same IDs that make up the portable_ids in
      the geounit table.

      This text file must not have have a header row.

      Please note, at this time the data import and adjacency calculator do not support
      data where the cost between A->B != B->A.

      <Adjacency path="/projects/PublicMapping/DistrictBuilder/processed_15tiemposecciones.txt" regionref="mx"/>
    </Adjacencies>
    -->

    <GeoLevels>
      <!--

      A child geolevel. The geography of the parent geolevel must
      be coincident in its child.

      -->
      <GeoLevel id="county" name="county" label="county" min_zoom="0" sort_key="1" tolerance="250">
          <!--

          You may use EITHER the "Shapefile" or "Files" element as a child
          of geolevel to define the geography and attributes. The
          "Shapefile" element must contain both the geography and
          attributes, whereas the "Files" element contains an item for the
          geography, and multiple items for the attributes.

          This is in anticipation of loading data that has been downloaded
          directly from the American Fact Finder web application hosted by
          the US Census Beureau.

          -->
          <Files>
              <Geography path="/data/County.shp">
                  <!--

                  Each Field item defines a field in the shapefile that
                  describes a different part of the geographic unit.

                  A "name" type field is used to display the name of the
                  geographic unit.

                  A "portable" type field is used to store the FIPS/GEOID
                  of the geographic unit, which is shared with other GIS
                  systems.

                  A "tree" type field is used to store information about
                  the geography, and where it resides in the tree. This type
                  of field requires a "pos" attribute, which declares which
                  position in the tree the field belongs (starting at 0);
                  a "width" attribute is also required to declare how wide
                  this portion of the tree code is. This is helpful when
                  the treecode may not be zero padded.

                  -->
                  <Fields>
                      <!-- Name of county -->
                      <Field name="Cnty_Name" type="name"/>
                      <!-- unique identifier -->
                      <Field name="Cnty_Key" type="portable"/>
                      <!-- state code -->
                      <Field name="state_code" type="tree" pos="0" width="2"/>
                      <!-- county code -->
                      <Field name="Cnty_Code" type="tree" pos="1" width="3"/>
                  </Fields>
              </Geography>
          </Files>
      </GeoLevel>

      <GeoLevel id="vtd" name="vtd" label="vtd" min_zoom="4" sort_key="2" tolerance="25">
          <!--

          You may use EITHER the "Shapefile" or "Files" element as a child
          of geolevel to define the geography and attributes. The
          "Shapefile" element must contain both the geography and
          attributes, whereas the "Files" element contains an item for the
          geography, and multiple items for the attributes.

          This is in anticipation of loading data that has been downloaded
          directly from the American Fact Finder web application hosted by
          the US Census Beureau.

          -->
          <Files>
              <Geography path="/data/VotingDistrict.shp">
                  <!--

                  Each Field item defines a field in the shapefile that
                  describes a different part of the geographic unit.

                  A "name" type field is used to display the name of the
                  geographic unit.

                  A "portable" type field is used to store the FIPS/GEOID
                  of the geographic unit, which is shared with other GIS
                  systems.

                  A "tree" type field is used to store information about
                  the geography, and where it resides in the tree. This type
                  of field requires a "pos" attribute, which declares which
                  position in the tree the field belongs (starting at 0);
                  a "width" attribute is also required to declare how wide
                  this portion of the tree code is. This is helpful when
                  the treecode may not be zero padded.

                  -->
                  <Fields>
                      <!-- Name of VTD -->
                      <Field name="VTD_Name" type="name"/>
                      <!-- unique identifier -->
                      <Field name="VTD_Key" type="portable"/>
                      <!-- state code -->
                      <Field name="state_code" type="tree" pos="0" width="2"/>
                      <!-- county code -->
                      <Field name="Cnty_Code" type="tree" pos="1" width="3"/>
                      <!-- vtd code -->
                      <Field name="VTD" type="tree" pos="2" width="4"/>
                  </Fields>
              </Geography>
          </Files>
      </GeoLevel>
    </GeoLevels>

    <!--

    This element facilitates the creation of system templates. A
    system template is a plan owned by the admin user, that all other
    users can create derivative plans from.

    -->
    <Templates>
        <Template name="Congressional">
            <!-- A reference to a legislative body. -->
            <LegislativeBody ref="congress"/>

            <!--

            The path to the district index file. The index file must be
            a two column CSV file, with each row corresponding to 1) a
            unit of geography, and 2) the district it belongs to.

            -->
            <Blockfile path="/data/cd111_index.csv" />
        </Template>
    </Templates>

    <!--

    Configuration settings for the components of the application. The
    "root" attribute defines the location in the file system, under
    which the rest of the application components can be found.

    -->
    <Project sessionquota="5" sessiontimeout="15">
        <!--
           Internationalization and localization information.

           At lease one language is required. After running setup, the default
           LANGUAGE_CODE for the app will be set to the first language defined.
           Running setup with the '-l' option will create a message file and
           compile it for each Language defined.
        -->
        <Internationalization timezone="US/Eastern" default="en">
            <Language code="en" label="English" />
            <Language code="fr" label="French" />
            <Language code="es" label="Spanish" />
            <Language code="ja" label="Japanese" />
        </Internationalization>

        <!-- Configuration items specific to the redistricting app. -->
        <Redistricting>
            <!--

            Information about the mapserver and geoserver settings.

            The "basemaps" attribute is optional, and can be any set to
            any combination (CSV) of the following:
              osm-road
              arc-road
              google-road
              google-aerial
              google-hybrid
              bing-road
              bing-aerial
              bing-hybrid

            The options are displayed in the order in which they are set,
            with the first one being set to the default base layer. If
            this is not set, it will default to osm-road. If the desire
            is to have no base layer, set it to the empty string.

            -->
            <MapServer
                ns="pmp"
                nshref="https://github.com/PublicMapping/"
                maxfeatures="100" />

            <!--

            Use a GoogleAnalytics account to tract the usage of the
            application. This requires an account and domain.

            <GoogleAnalytics account="" domain=""/>

            -->

            <!-- Upload file size restrictions. This is in KB -->
            <Upload maxsize="5300"/>

            <!--
            Fix unassigned behavior
            minpercent - The minimum percentage of assigned units required
                in order to perform fixes for adjacent unassigned units.
                This does not apply to unassigned units wholly contained within
                a district - those don't require a minimum.
            comparatorsubject - Name of the subject used for deciding which district
                to assign an adjacent unassigned geounit to in the case of multiple
                adjacent districts. The district with the lower value for this subject
                is always favored.
            -->
            <FixUnassigned minpercent="99" comparatorsubject="poptot" />
        </Redistricting>

        <!-- Information about the mailer configuration. -->
        <Mailer />
    </Project>

</DistrictBuilder>
